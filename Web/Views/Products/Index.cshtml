@model Web.ViewModels.Products.ProductsVM

@using Web.ViewModels.Categories;
@using System.Web.Script.Serialization;

@{
    var productCategories = Model.Product.Categories != null ? String.Join(",", Model.Product.Categories.Select(c => c.Id)) : String.Empty;
}

@section scripts {
    <script src="/Scripts/Products/Products.js"></script>
}

@section stylesheets
{
    <link href="/Content/jsTree/themes/default/style.min.css" rel="stylesheet" />
}

@{
    ViewBag.Title = "Products";
}
<h1>Products</h1>
<div id="inputData" class="formData">
    @using(Html.BeginForm())
    {
        @Html.ValidationSummary(true)

        
        <h2 id="headline"></h2>
        

        <div class="objId">
            @Html.HiddenFor(model => model.Product.Id)
        </div>
        
        <fieldset>

            <div class="editor-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Product.Name)
                </div>
                <div class="editor-field objName">
                    @Html.EditorFor(model => model.Product.Name)
                    @Html.ValidationMessageFor(model => model.Product.Name)
                </div>
                <div class="clearBoth"></div>
            </div>

            <div class="editor-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Product.SupplierId)
                </div>
                <div class="editor-field objSupplierId">
                    @Html.DropDownListFor(model => model.Product.SupplierId, (SelectList)ViewBag.SupplierSelectList, "Select supplier")
                    @Html.ValidationMessageFor(model => model.Product.SupplierId)
                </div>
                <div class="clearBoth"></div>
            </div>

            <div class="editor-group">
                <div class="editor-label">
                    @Html.LabelFor(model => model.Product.Categories)
                </div>
                <div id="categoriesTree" class="editor-field" data-selected="@productCategories">
                    <p>
                        @Html.Partial("../Categories/_CategoriesTree", new TreeVM { Categories = Model.Categories })
                    </p>
                </div>
                <div class="clearBoth"></div>
            </div>

            <div class="editor-group editor-last">
                <input id="saveButton" type="submit" />
                <input id="cancelButton" type="button" value="Cancel" />
            </div>
        </fieldset>
    }
</div>
<div id="tableRows">
    @Html.Partial("_ProductsList", Model)
</div>
